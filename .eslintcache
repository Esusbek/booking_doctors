[{"D:\\JS\\Doctor_Booking\\booking_doctors\\src\\index.js":"1","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\App.js":"2","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\serviceWorker.js":"3","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\reducers\\index.js":"4","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\actions\\index.js":"5","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\components\\index.js":"6","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\components\\LoginForm.js":"7"},{"size":451,"mtime":1611514768993,"results":"8","hashOfConfig":"9"},{"size":618,"mtime":1611856934043,"results":"10","hashOfConfig":"9"},{"size":4951,"mtime":1611514912910,"results":"11","hashOfConfig":"9"},{"size":1831,"mtime":1611514403839,"results":"12","hashOfConfig":"9"},{"size":1951,"mtime":1611855327017,"results":"13","hashOfConfig":"9"},{"size":99,"mtime":1611855964769,"results":"14","hashOfConfig":"9"},{"size":865,"mtime":1611856198605,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"153508m",{"filePath":"19","messages":"20","errorCount":1,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"D:\\JS\\Doctor_Booking\\booking_doctors\\src\\index.js",[],["34","35"],"D:\\JS\\Doctor_Booking\\booking_doctors\\src\\App.js",["36","37","38","39","40","41","42","43","44"],"D:\\JS\\Doctor_Booking\\booking_doctors\\src\\serviceWorker.js",[],"D:\\JS\\Doctor_Booking\\booking_doctors\\src\\reducers\\index.js",["45","46"],"import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { actionAuthLogin } from '../actions'\r\n\r\n\r\nconst reducers = {\r\n    promise(state={}, action){\r\n        if (['LOGOUT', 'LOGIN'].includes(action.type)) return {}\r\n        if (action.type === 'PROMISE'){\r\n            const { name=\"default\", status, payload, error} = action\r\n            if (status){\r\n                return {\r\n                    ...state, [name]: {status, payload: (status === 'PENDING' && state[name] && state[name].payload) || payload, error}\r\n                }\r\n            }\r\n        }\r\n        return state;\r\n    },\r\n    auth(state, action){ //....\r\n        if (state === undefined){\r\n            //добавить в action token из localStorage, и проимитировать LOGIN (action.type = 'LOGIN')\r\n            return {}\r\n        }\r\n        if (action.type === 'LOGIN'){\r\n            console.log('ЛОГИН')\r\n            //+localStorage\r\n            //jwt_decode\r\n//            return {token: action.jwt, payload: jwt_decode(action.jwt)}\r\n        }\r\n        if (action.type === 'LOGOUT'){\r\n            console.log('ЛОГАУТ')\r\n            //-localStorage\r\n            //вернуть пустой объект\r\n            return {}\r\n        }\r\n        return state\r\n    }\r\n}\r\n//{\r\n//    promise: {}\r\n//}\r\n\r\nlet store = createStore(combineReducers(reducers), applyMiddleware(thunk))\r\n\r\nstore.subscribe(() => console.log(store.getState()))\r\n//store.subscribe(() => {\r\n    //const state = store.getState()\r\n    //if (state.promise && state.promise.login && state.promise.login.payload){\r\n        //store.dispatch(actionAuthLogin(state.promise.login.payload.login))\r\n    //}\r\n//})\r\n\r\nconst delay = ms => new Promise(ok => setTimeout(() => ok(ms), ms))\r\n\r\n\r\nexport default store\r\n\r\n","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\actions\\index.js",["47"],"import { GraphQLClient } from 'graphql-request';\r\n\r\n//const gql = new GraphQLClient('/graphql', {headers: {Authorization: 'Bearer ' + ... }})\r\nconst gql = new GraphQLClient('/graphql')\r\n\r\nexport const actionSearch = text => ({type: 'SEARCH', text})\r\nexport const actionSearchResult = payload => ({type: 'SEARCH_RESULT', payload})\r\n\r\nexport const actionPromise = (name, promise) => {\r\n    const actionPending = () => ({type: 'PROMISE', name, status: 'PENDING', payload: null, error: null})\r\n    const actionResolved = payload => ({type: 'PROMISE', name, status: 'RESOLVED', payload, error: null})\r\n    const actionRejected = error => ({type: 'PROMISE', name, status: 'REJECTED', payload:null, error})\r\n\r\n\r\n    return async dispatch => {\r\n        dispatch(actionPending())\r\n        let payload\r\n        try {\r\n            payload = await promise\r\n            dispatch(actionResolved(payload))\r\n        }\r\n        catch (e){\r\n            dispatch(actionRejected(e))\r\n        }\r\n        return payload;\r\n    }\r\n}\r\n\r\nexport const actionLogin = (login,password, isDoctor) => \r\n    async dispatch => {\r\n        console.log(login, password, isDoctor)\r\n        if(!isDoctor)\r\n            let result = await dispatch(actionPromise('login', gql.request(`query login($login: String!, $password: String!){\r\n                  login(username: $login, password: $password)\r\n                }`, {login, password})))\r\n        else\r\n        let result = await dispatch(actionPromise('loginDoctor', gql.request(`query login($login: String!, $password: String!){\r\n              login(username: $login, password: $password)\r\n            }`, {login, password})))\r\n            \r\n        if (result){\r\n            dispatch(actionAuthLogin(result.login))\r\n        }\r\n    }\r\n\r\n\r\nexport const actionAuthLogin = (jwt) => ({\r\n    type: \"LOGIN\",\r\n    jwt\r\n})\r\n\r\n\r\nexport const actionAuthLogout = () => {\r\n    //npmhistory.push('/')\r\n    return {\r\n        type: \"LOGOUT\",\r\n    }\r\n}\r\n","D:\\JS\\Doctor_Booking\\booking_doctors\\src\\components\\index.js",[],"D:\\JS\\Doctor_Booking\\booking_doctors\\src\\components\\LoginForm.js",["48","49","50"],"import React, {useState, useMemo } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {actionLogin} from './actions'\r\n\r\nexport default const LoginForm = ({onLogin}) => {\r\n    const [login, setLogin] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isDoctor, setDoctor] = useState(false)\r\n    return (\r\n            <div>\r\n                <input type='text' value={login} onChange={e => setLogin(e.target.value)} />\r\n                <input type='password' value={password} onChange={e => setPassword(e.target.value)} />\r\n                <input type='checkbox' checked={isDoctor} onChange={() => setDoctor(!isDoctor)} />\r\n                <button onClick={() => onLogin(login, password, isDoctor)}>Login</button>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport const ConnectedLoginForm = connect(null, {onLogin: actionLogin})(LoginForm)",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"55","severity":1,"message":"59","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":12},{"ruleId":"55","severity":1,"message":"60","line":4,"column":19,"nodeType":"57","messageId":"58","endLine":4,"endColumn":26},{"ruleId":"55","severity":1,"message":"61","line":5,"column":9,"nodeType":"57","messageId":"58","endLine":5,"endColumn":21},{"ruleId":"55","severity":1,"message":"62","line":7,"column":24,"nodeType":"57","messageId":"58","endLine":7,"endColumn":28},{"ruleId":"55","severity":1,"message":"63","line":7,"column":30,"nodeType":"57","messageId":"58","endLine":7,"endColumn":36},{"ruleId":"55","severity":1,"message":"64","line":7,"column":38,"nodeType":"57","messageId":"58","endLine":7,"endColumn":46},{"ruleId":"65","severity":1,"message":"66","line":16,"column":1,"nodeType":"67","endLine":25,"endColumn":2},{"ruleId":"68","severity":2,"message":"69","line":20,"column":31,"nodeType":"57","messageId":"70","endLine":20,"endColumn":38},{"ruleId":"55","severity":1,"message":"71","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":25},{"ruleId":"55","severity":1,"message":"72","line":53,"column":7,"nodeType":"57","messageId":"58","endLine":53,"endColumn":12},{"ruleId":null,"fatal":true,"severity":2,"message":"73","line":33,"column":13},{"ruleId":"55","severity":1,"message":"74","line":1,"column":26,"nodeType":"57","messageId":"58","endLine":1,"endColumn":33},{"ruleId":"75","severity":2,"message":"76","line":5,"column":16,"nodeType":"57","messageId":"77","endLine":5,"endColumn":25},{"ruleId":"75","severity":2,"message":"76","line":19,"column":73,"nodeType":"57","messageId":"77","endLine":19,"endColumn":82},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'connect' is defined but never used.","'actionSearch' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'actionAuthLogin' is defined but never used.","'delay' is assigned a value but never used.","Parsing error: Unexpected reserved word 'let'\n\n\u001b[0m \u001b[90m 31 | \u001b[39m        console\u001b[33m.\u001b[39mlog(login\u001b[33m,\u001b[39m password\u001b[33m,\u001b[39m isDoctor)\u001b[0m\n\u001b[0m \u001b[90m 32 | \u001b[39m        \u001b[36mif\u001b[39m(\u001b[33m!\u001b[39misDoctor)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 33 | \u001b[39m            let result \u001b[33m=\u001b[39m await dispatch(actionPromise(\u001b[32m'login'\u001b[39m\u001b[33m,\u001b[39m gql\u001b[33m.\u001b[39mrequest(\u001b[32m`query login($login: String!, $password: String!){\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m\u001b[32m                  login(username: $login, password: $password)\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m\u001b[32m                }`\u001b[39m\u001b[33m,\u001b[39m {login\u001b[33m,\u001b[39m password})))\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m        \u001b[36melse\u001b[39m\u001b[0m","'useMemo' is defined but never used.","no-undef","'LoginForm' is not defined.","undef","no-global-assign","no-unsafe-negation"]